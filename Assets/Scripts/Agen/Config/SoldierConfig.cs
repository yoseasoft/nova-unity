
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace Game.Config
{
    public sealed partial class SoldierConfig : BeanBase
    {
        public SoldierConfig(ByteBuf buf)
        {
            id = buf.ReadInt();
            name = buf.ReadString();
            type = buf.ReadInt();
            if(buf.ReadBool()){ subtype = buf.ReadInt(); } else { subtype = null; }
            onGroundWalking = buf.ReadBool();
            onAirFlight = buf.ReadBool();
            isRangeTarget = buf.ReadBool();
            aiId = buf.ReadInt();
            attrId = buf.ReadInt();
            {int n0 = System.Math.Min(buf.ReadSize(), buf.Size);commonSkills = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = buf.ReadInt(); commonSkills.Add(_e0);}}
            iconId = buf.ReadInt();
            resourceId = buf.ReadInt();

            PostInit();
        }

        public static SoldierConfig DeserializeSoldierConfig(ByteBuf buf)
        {
            return new SoldierConfig(buf);
        }

        /// <summary>
        /// 士兵ID
        /// </summary>
        public readonly int id;

        /// <summary>
        /// 士兵名称
        /// </summary>
        public readonly string name;

        /// <summary>
        /// 类型
        /// </summary>
        public readonly int type;

        /// <summary>
        /// 二级类型
        /// </summary>
        public readonly int? subtype;

        /// <summary>
        /// 地面行走
        /// </summary>
        public readonly bool onGroundWalking;

        /// <summary>
        /// 空中飞行
        /// </summary>
        public readonly bool onAirFlight;

        /// <summary>
        /// 是否为远程目标
        /// </summary>
        public readonly bool isRangeTarget;

        /// <summary>
        /// AI引用ID
        /// </summary>
        public readonly int aiId;

        /// <summary>
        /// 属性引用ID
        /// </summary>
        public readonly int attrId;

        /// <summary>
        /// 技能列表
        /// </summary>
        public readonly System.Collections.Generic.List<int> commonSkills;

        /// <summary>
        /// 图标资源ID
        /// </summary>
        public readonly int iconId;

        /// <summary>
        /// 模型资源ID
        /// </summary>
        public readonly int resourceId;

        /// <summary>
        /// 模型资源ID
        /// </summary>
        public ResourceConfig ResourceConfig => ResourceConfigTable.Instance.GetOrDefault(resourceId);

        public const int Id = -1161791676;

        public override int GetTypeId() => Id;

        public override string ToString()
        {
            return "{ "
            + "id:" + id + ","
            + "name:" + name + ","
            + "type:" + type + ","
            + "subtype:" + subtype + ","
            + "onGroundWalking:" + onGroundWalking + ","
            + "onAirFlight:" + onAirFlight + ","
            + "isRangeTarget:" + isRangeTarget + ","
            + "aiId:" + aiId + ","
            + "attrId:" + attrId + ","
            + "commonSkills:" + Luban.StringUtil.CollectionToString(commonSkills) + ","
            + "iconId:" + iconId + ","
            + "resourceId:" + resourceId + ","
            + "}";
        }

        partial void PostInit();
    }
}
